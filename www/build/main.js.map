{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/github-api/github-api.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/github-api/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 134;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 134\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 179;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 179\n// module chunks = 0","import { Component } from \"@angular/core\";\nimport {\n  debounceTime,\n  map,\n  catchError,\n  distinctUntilChanged\n} from \"rxjs/operators\";\nimport { of } from \"rxjs/observable/of\";\nimport { GithubApiProvider } from \"../../providers/github-api/github-api\";\nimport {\n  FormBuilder,\n  Validators,\n  FormGroup,\n  AbstractControl\n} from \"@angular/forms\";\nimport Repository from \"../../providers/github-api/models/Repository\";\nimport { Observable } from \"rxjs/Observable\";\n\n@Component({\n  selector: \"page-home\",\n  templateUrl: \"home.html\"\n})\nexport class HomePage {\n  form: FormGroup;\n  repositories: Repository[] = [];\n  loading = false;\n  debouncer: any;\n  debounceTime = 500;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private githubApiProvider: GithubApiProvider\n  ) {\n    this.form = this.formBuilder.group({\n      username: [\"\", Validators.required, this.userExists.bind(this), \"blur\"]\n    });\n  }\n\n  fieldHasValidClass(key: string) {\n    return this.form.get(key).valid && this.form.touched;\n  }\n\n  fieldHasInvalidClass(key: string) {\n    return this.form.get(key).invalid && this.form.touched;\n  }\n\n  successHandler(res: Repository[]) {\n    console.log(`HomePage --> successHandler() --> res`, res);\n    this.repositories = res;\n  }\n\n  errorHandler(err) {\n    console.log(`HomePage --> errorHandler() --> err`, err);\n    this.repositories = [];\n  }\n\n  userExists(control: AbstractControl) {\n    clearTimeout(this.debouncer);\n    return new Promise(resolve => {\n      this.debouncer = setTimeout(() => {\n        this.debouncer = setTimeout(() => {\n          this.githubApiProvider\n            .getUser(control.value)\n            .subscribe(\n              res => resolve(res),\n              err => resolve({ usernameInUse: true })\n            );\n        }, this.debounceTime);\n      });\n    });\n  }\n\n  submitForm() {\n    console.log(`HomePage --> submitForm() --> this.form`, this.form);\n    this.githubApiProvider\n      .getRepositories(this.form.value.username)\n      .subscribe(this.successHandler.bind(this), this.errorHandler.bind(this));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\n\n/*\n  Generated class for the GithubApiProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GithubApiProvider {\n  private url = \"https://api.github.com\";\n  private version = \"v3\";\n\n  constructor(private http: HttpClient) {\n    console.log(\"Hello GithubApiProvider Provider\");\n  }\n\n  private getAcceptHeader(): string {\n    return `application/vnd.github.${this.version}+json`;\n  }\n\n  getRepositories(username: string): Observable<object> {\n    return this.http.get(`${this.url}/users/${username}/repos`, {\n      headers: {\n        Accept: this.getAcceptHeader()\n      }\n    });\n  }\n\n  getUser(username: string): Observable<object> {\n    return this.http.get(`${this.url}/users/${username}`, {\n      headers: {\n        Accept: this.getAcceptHeader()\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/github-api/github-api.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from \"@angular/platform-browser\";\nimport { ErrorHandler, NgModule } from \"@angular/core\";\nimport { IonicApp, IonicErrorHandler, IonicModule } from \"ionic-angular\";\nimport { SplashScreen } from \"@ionic-native/splash-screen\";\nimport { StatusBar } from \"@ionic-native/status-bar\";\n\nimport { MyApp } from \"./app.component\";\nimport { HomePage } from \"../pages/home/home\";\nimport { HttpClientModule, HttpClient } from \"@angular/common/http\";\nimport { GithubApiProvider } from \"../providers/github-api\";\n\n@NgModule({\n  declarations: [MyApp, HomePage],\n  imports: [BrowserModule, IonicModule.forRoot(MyApp), HttpClientModule],\n  bootstrap: [IonicApp],\n  entryComponents: [MyApp, HomePage],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    GithubApiProvider,\n    HttpClient\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export * from \"./github-api\";\nexport * from \"./models\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/github-api/index.ts"],"sourceRoot":""}